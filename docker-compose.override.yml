version: '3.4'

networks:   
   login-app-network:
    external: true      

services:
    mongo:        
        container_name: mongo-container 
        restart: always
        volumes:
            - ${WEBAPP_STORAGE_HOME}/site:/data/db/
        ports:
            - "27017:27017"  
            
    zookeeper:        
        ports:
            - "2181"
    kafka:       
        ports:
            - "9092"
        environment:            
            KAFKA_ADVERTISED_HOST_NAME: 192.168.0.152
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CREATE_TOPICS_SEPARATOR: "$$'\n'"
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'                        
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE            
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            
    login.api:    
        container_name: loginapi
        environment:
            - ASPNETCORE_ENVIRONMENT=Development            
            - "DatabaseSettings:ConnectionString=mongodb://usersdb:27017"
            - "DOCKER_HOST:${DOCKER_GATEWAY_HOST:-host.docker.internal}"
        depends_on:
            - mongo
        networks:
            - login-app-network
        ports:
            - "5000:80"                  
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro      

    flippy.api:    
        container_name: flippyapi
        environment:
            - ASPNETCORE_ENVIRONMENT=Development            
            - "DatabaseSettings:ConnectionString=mongodb://flippydb:27017"
            - "DOCKER_HOST:${DOCKER_GATEWAY_HOST:-host.docker.internal}"
        depends_on:
            - mongo            
            - login.api                        
        networks:
            - login-app-network
        ports:
            - "5001:80"                  
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    
    shoppartner.api:    
        container_name: shoppartnerapi
        environment:
            - ASPNETCORE_ENVIRONMENT=Development            
            - "DatabaseSettings:ConnectionString=mongodb://shoppartnerdb:27017"
            - "DOCKER_HOST:${DOCKER_GATEWAY_HOST:-host.docker.internal}"
        depends_on:
            - mongo            
            - login.api            
        networks:
            - login-app-network
        ports:
            - "5002:80"                  
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    
    deliveryagent.api:    
        container_name: deliveryagentapi
        environment:
            - ASPNETCORE_ENVIRONMENT=Development            
            - "DatabaseSettings:ConnectionString=mongodb://deliveryagentdb:27017"
            - "DOCKER_HOST:${DOCKER_GATEWAY_HOST:-host.docker.internal}"
        depends_on:
            - mongo            
            - login.api            
        networks:
            - login-app-network
        ports:
            - "5003:80"                  
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro  
      

